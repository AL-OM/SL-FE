[{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/components/layout/the-sidebar.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'AppState' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18},{"ruleId":"no-unused-vars","severity":2,"message":"'SidebarItem' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":19},{"ruleId":"no-unused-vars","severity":2,"message":"'dispatch' is assigned a value but never used.","line":11,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":17}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport sideBarNavigation from \"./nav\";\n\n// sidebar nav config\nimport { AppState } from \"../../core/store\";\nimport SidebarItem from \"./atoms/sidebar-item\";\nimport CreateTheSidebarNav from \"./atoms/create-sidebar-nav\";\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"h-full px-3 pb-4 overflow-y-auto bg-white dark:bg-gray-800 overflow-x-hidden\">\n      <CreateTheSidebarNav items={sideBarNavigation} />\n    </div>\n  );\n};\n\nexport default React.memo(TheSidebar);\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/core/lib/catch-helper.ts","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'message' is assigned a value but never used.","line":6,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// import { toast } from \"react-toastify\";\nimport { ApiResult } from \"../data-transfer/api-result\";\nimport { onClearSession } from \"../store/reducer/session/actions\";\n\nexport const catchHandle = (e: any, dispatch: any): void => {\n  const { message }: ApiResult = e;\n\n  try {\n    if (e.response.status) {\n      switch (e.response.status) {\n        case 401: {\n          dispatch(onClearSession());\n          // toast.warning(\"Login session expired\");\n\n          break;\n        }\n        default: {\n          // toast.warning(message);\n        }\n      }\n    }\n  } catch {\n    // toast.warning(message);\n  }\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/core/lib/constants.ts","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Zero' is defined but never used.","line":2,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":7},{"ruleId":"no-unused-vars","severity":2,"message":"'One' is defined but never used.","line":3,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":6},{"ruleId":"no-unused-vars","severity":2,"message":"'None' is defined but never used.","line":7,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":7},{"ruleId":"no-unused-vars","severity":2,"message":"'MainLayout' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":13}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export enum ExampleEnum {\n  Zero = 0,\n  One,\n}\n\nexport enum LayoutTypeEnum {\n  None = 0,\n  MainLayout,\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/core/navigation/route-paths.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":6,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":6,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const routePaths = {\n  dashboard: \"/\",\n  SignIn: \"/auth/sign-in\",\n  UserRoles: \"/users\",\n};\nconsole.log('sdff')","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/core/store/index.ts","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'abbb' is assigned a value but never used.","line":14,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":11}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { applyMiddleware, legacy_createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport middleware from \"./middleware\";\nimport { PERSIST_CONFIG } from \"./persist\";\nimport { rootReducer } from \"./reducer\";\n\nconst bindMiddleware = (middleware: any[]) => {\n  // if (process.env.NODE_ENV !== \"production\") {\n  //   return composeWithDevTools(applyMiddleware(...middleware));\n  // }\n  // return applyMiddleware(...middleware);\n  return applyMiddleware(...middleware);\n};\nconst abbb = 'fdsfads'\nconst persistedReducer = persistReducer(PERSIST_CONFIG, rootReducer);\n\nexport type AppState = ReturnType<typeof rootReducer>;\nexport const store = legacy_createStore(\n  persistedReducer,\n  bindMiddleware([...middleware])\n);\nexport const persistor = persistStore(store);\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/core/store/middleware/index.ts","messages":[{"ruleId":"import/no-anonymous-default-export","severity":1,"message":"Assign array to a variable before exporting as module default","line":4,"column":1,"nodeType":"ExportDefaultDeclaration","endLine":4,"endColumn":34}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import thunkMiddleware from \"redux-thunk\";\n\n// define store middlewares as an array\nexport default [thunkMiddleware];\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/core/store/persist/index.ts","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'_key' is defined but never used.","line":5,"column":13,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":22},{"ruleId":"no-unused-vars","severity":2,"message":"'_key' is defined but never used.","line":11,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":25}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import createWebStorage from \"redux-persist/lib/storage/createWebStorage\";\n\nconst createNoopStorage = () => {\n  return {\n    getItem(_key: any) {\n      return Promise.resolve(null);\n    },\n    setItem(_key: any, value: any) {\n      return Promise.resolve(value);\n    },\n    removeItem(_key: any) {\n      return Promise.resolve();\n    },\n  };\n};\n\nconst storage =\n  typeof window !== \"undefined\"\n    ? createWebStorage(\"local\")\n    : createNoopStorage();\n\nexport const PERSIST_CONFIG = {\n  key: \"root\",\n  storage,\n  whitelist: [\"session\"], // save specific reducers\n  blacklist: [], // don't save specific reducers\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/core/view-models/example/example-paging-vm.ts","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Type' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":14}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Type } from \"class-transformer\";\nimport { PagingVM } from \"../paging-vm\";\nimport { ExampleVM } from \"./example-vm\";\n\nexport class ExamplePagingVM extends PagingVM {\n  // @Type(() => ExampleVM)\n  examples: ExampleVM[];\n\n  constructor() {\n    super();\n    this.examples = [];\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/pages/_app.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'AuthenticationWrapper' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":29}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { AppProps } from \"next/app\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"@/core/store\";\nimport \"reflect-metadata\";\nimport \"@/styles/globals.css\";\nimport \"@/styles/spinner.css\";\nimport Spinner from \"@/components/spinner/spinner\";\nimport { useRouter } from \"next/router\";\nimport routes from \"@/core/navigation/routes\";\nimport { LayoutTypeEnum } from \"@/core/lib/constants\";\nimport { TheLayout } from \"@/components/layout\";\nimport { RouteVM } from \"@/core/view-models/session/session-vm\";\nimport Head from \"next/head\";\nimport AuthenticationWrapper from \"@/components/wrapper/authendication\";\n\nfunction App({ Component, pageProps }: AppProps) {\n  const router = useRouter();\n  const { pathname } = router;\n\n  const renderLayout = (pageInfo: RouteVM) => {\n    if (pageInfo) {\n      switch (pageInfo.layout) {\n        case LayoutTypeEnum.MainLayout:\n          return (\n            <TheLayout>\n              <Component {...pageProps} />\n            </TheLayout>\n          );\n\n        case LayoutTypeEnum.None:\n          return <Component {...pageProps} />;\n      }\n    }\n  };\n\n  const getLayout = () => {\n    const pageInfo = routes.find((item) => {\n      return item.path === pathname;\n    });\n\n    if (pageInfo) {\n      return (\n        <>\n          {pageInfo?.name && (\n            <Head>\n              <title>{pageInfo.name}</title>\n            </Head>\n          )}\n\n          {renderLayout(pageInfo)}\n        </>\n      );\n    }\n\n    return <Component {...pageProps} />;\n  };\n\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={<Spinner show />}>\n        {getLayout()}\n        <Spinner />\n      </PersistGate>\n    </Provider>\n  );\n}\nexport default App;\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/pages/_document.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Spinner' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":15}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/* eslint-disable @next/next/no-title-in-document-head */\nimport Spinner from \"@/components/spinner/spinner\";\nimport { Head, Html, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/pages/auth/sign-in/index.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'props' is defined but never used.","line":12,"column":53,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":58},{"ruleId":"no-unused-vars","severity":2,"message":"'dispatch' is assigned a value but never used.","line":13,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":32},{"ruleId":"no-unused-vars","severity":2,"message":"'loggedIn' is assigned a value but never used.","line":14,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":19},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":22,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":22,"endColumn":14}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Dispatch } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState, store } from \"../../../core/store\";\nimport SignInContainer from \"@/view/auth/sign-in.container\";\n\ninterface ComponentProps {\n  user: any;\n}\n\ntype Props = ComponentProps;\n\nconst SignInPage: React.FunctionComponent<Props> = (props) => {\n  const dispatch: Dispatch<any> = useDispatch();\n  const { loggedIn } = useSelector((state: AppState) => state.session);\n\n  return <SignInContainer />;\n};\n\nexport async function getServerSideProps() {\n  const { session, loggedIn } = store.getState().session;\n\n  console.log(session, loggedIn);\n\n  return {\n    props: { user: JSON.stringify(session.user) }, // will be passed to the page component as props\n  };\n}\n\nexport default SignInPage;\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/pages/users/index.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Dispatch' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":25},{"ruleId":"no-unused-vars","severity":2,"message":"'useEffect' is defined but never used.","line":1,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":36},{"ruleId":"no-unused-vars","severity":2,"message":"'useDispatch' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":21},{"ruleId":"no-unused-vars","severity":2,"message":"'useSelector' is defined but never used.","line":2,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":34},{"ruleId":"no-unused-vars","severity":2,"message":"'UserVM' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'SessionVM' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":19},{"ruleId":"no-unused-vars","severity":2,"message":"'SignInContainer' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":23},{"ruleId":"no-unused-vars","severity":2,"message":"'props' is defined but never used.","line":15,"column":52,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":57}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Dispatch, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UserVM } from \"@/core/view-models/user/user-vm\";\nimport { SessionVM } from \"@/core/view-models/session/session-vm\";\nimport { AppProps } from \"next/app\";\nimport SignInContainer from \"@/view/users/users.container\";\nimport UserContainer from \"@/view/users/users.container\";\n\ninterface ComponentProps {\n  user: any;\n}\n\ntype Props = AppProps & ComponentProps;\n\nconst UsersPage: React.FunctionComponent<Props> = (props) => {\n  return <UserContainer />;\n};\n\nexport async function getServerSideProps() {\n  return {\n    props: {}, // will be passed to the page component as props\n  };\n}\n\nexport default UsersPage;\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/view/auth/sign-in.component.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'data' is defined but never used.","line":6,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":33},{"ruleId":"no-unused-vars","severity":2,"message":"'formData' is assigned a value but never used.","line":12,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":18},{"ruleId":"no-unused-vars","severity":2,"message":"'setFormData' is assigned a value but never used.","line":12,"column":20,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":31}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/* eslint-disable @next/next/no-img-element */\nimport { SignInVM } from \"@/core/view-models/auth/sign-in-vm\";\nimport React, { useState } from \"react\";\n\ninterface ComponentProps {\n  onSignInClick: (data: SignInVM) => void;\n}\n\ntype Props = ComponentProps;\n\nconst SignInComponent: React.FunctionComponent<Props> = (props) => {\n  const [formData, setFormData] = useState<SignInVM>(new SignInVM());\n\n  return (\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n        <a\n          href=\"#\"\n          className=\"flex items-center mb-6 text-2xl font-semibold text-gray-900 dark:text-white\"\n        >\n          {/* <img\n            className=\"w-8 h-8 mr-2\"\n            src=\"https://flowbite.s3.amazonaws.com/blocks/marketing-ui/logo.svg\"\n            alt=\"logo\"\n          /> */}\n          {\"Resource Monitoring\"}\n        </a>\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n              {\"Sign in to your account\"}\n            </h1>\n            <form\n              className=\"space-y-4 md:space-y-6\"\n              action=\"#\"\n              onSubmit={(e) => {\n                e.preventDefault();\n                props.onSignInClick(new SignInVM());\n              }}\n            >\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  {\"Your email\"}\n                </label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder=\"name@company.com\"\n                  required\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"password\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  {\"Password\"}\n                </label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"••••••••\"\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  required\n                />\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-start\">\n                  <div className=\"flex items-center h-5\">\n                    <input\n                      id=\"remember\"\n                      aria-describedby=\"remember\"\n                      type=\"checkbox\"\n                      className=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800\"\n                    />\n                  </div>\n                  <div className=\"ml-3 text-sm\">\n                    <label\n                      htmlFor={\"remember\"}\n                      className={\"text-gray-500 dark:text-gray-300\"}\n                    >\n                      {\"Remember me\"}\n                    </label>\n                  </div>\n                </div>\n                <a\n                  href=\"#\"\n                  className={\n                    \"text-sm font-medium text-blue-600 hover:underline dark:text-primary-500\"\n                  }\n                >\n                  {\"Forgot password?\"}\n                </a>\n              </div>\n              <button\n                type={\"submit\"}\n                className={\n                  \"w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-primary-800\"\n                }\n              >\n                {\"Sign in\"}\n              </button>\n              <p\n                className={\n                  \"text-sm font-light text-gray-500 dark:text-gray-400\"\n                }\n              >\n                {\"Don’t have an account yet?\"}\n                <a\n                  href=\"#\"\n                  className={\n                    \"font-medium text-primary-600 hover:underline dark:text-primary-500\"\n                  }\n                >\n                  {\"Sign up\"}\n                </a>\n              </p>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SignInComponent;\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/view/auth/sign-in.container.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'props' is defined but never used.","line":16,"column":58,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":63},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":14}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Dispatch, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SignInComponent from \"./sign-in.component\";\nimport { AppState, store } from \"@/core/store\";\nimport { SignInVM } from \"@/core/view-models/auth/sign-in-vm\";\nimport { onThunkSignIn } from \"@/view/auth/thunk\";\nimport { useRouter } from \"next/router\";\nimport { onSetEnabledSpinner } from \"@/core/store/reducer/app/actions\";\n\ninterface ComponentProps {\n  user?: any;\n}\n\ntype Props = ComponentProps;\n\nconst SignInContainer: React.FunctionComponent<Props> = (props) => {\n  const dispatch: Dispatch<any> = useDispatch();\n  const { loggedIn, session } = useSelector((state: AppState) => state.session);\n  const router = useRouter();\n\n  console.log(loggedIn, session);\n\n  useEffect(() => {\n    // dispatch(onSetSession(new SessionVM()));\n\n    if (loggedIn) {\n      // history.push(routePaths.UserRoles);\n    }\n  }, [loggedIn]);\n\n  const onSignInClick = (data: SignInVM) => {\n    dispatch(onSetEnabledSpinner(true));\n\n    setTimeout(() => {\n      dispatch(onSetEnabledSpinner(false));\n      dispatch(onThunkSignIn(data));\n      router.push(\"/users\");\n    }, 1500);\n  };\n\n  return <SignInComponent onSignInClick={onSignInClick} />;\n};\n\nexport async function getServerSideProps() {\n  const { session } = store.getState().session;\n\n  return {\n    props: { user: JSON.stringify(session.user) }, // will be passed to the page component as props\n  };\n}\n\nexport default SignInContainer;\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/view/auth/thunk/index.ts","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'authService' is assigned a value but never used.","line":14,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":22},{"ruleId":"no-unused-vars","severity":2,"message":"'signInReq' is assigned a value but never used.","line":15,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":33}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { SignInApiResult } from \"../../../core/data-transfer/auth/sign-in.api-result\";\nimport { catchHandle } from \"../../../core/lib/catch-helper\";\nimport { AuthService } from \"../../../core/services/auth.service\";\nimport { onSetSession } from \"../../../core/store/reducer/session/actions\";\nimport { ThunkActionTypes } from \"../../../core/store/thunk/types\";\nimport {\n  SignInReqVM,\n  SignInVM,\n} from \"../../../core/view-models/auth/sign-in-vm\";\n\nexport const onThunkSignIn =\n  (data: SignInVM): ThunkActionTypes =>\n  async (dispatch) => {\n    const authService = new AuthService();\n    const signInReq: SignInReqVM = {\n      username: data.username,\n      password: data.password,\n    };\n\n    try {\n      // const res = await authService.signIn(signInReq);\n\n      // Fake\n      const res: SignInApiResult = {\n        ...new SignInApiResult(),\n        success: true,\n      };\n\n      if (res.success) {\n        dispatch(onSetSession(res.data));\n      } else {\n        // toast.warn(res.message);\n      }\n    } catch (e) {\n      catchHandle(e, dispatch);\n    }\n  };\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/view/users/store/thunk/index.ts","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'userRoleService' is assigned a value but never used.","line":26,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":26,"endColumn":24}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ThunkActionTypes } from \"../../../../core/store/thunk/types\";\nimport { onGetUserRolesSuccess } from \"../reducer/action\";\nimport { UserRoleService } from \"../../../../core/services/user-role.service\";\nimport { catchHandle } from \"../../../../core/lib/catch-helper\";\nimport { GetUserRolesApiResult } from \"../../../../core/data-transfer/user-role/get-user-roles.api-result\";\nimport { UserRoleVM } from \"@/core/view-models/user-role/user-role-vm\";\n\nexport const userRolesFakeData: UserRoleVM[] = [\n  { id: 0, name: \"Admin\" },\n  { id: 1, name: \"Moderator\" },\n  { id: 2, name: \"Clinician\" },\n  { id: 3, name: \"Test 1\" },\n  { id: 4, name: \"Test 2\" },\n  { id: 5, name: \"Test 3\" },\n  { id: 6, name: \"Test 4\" },\n  { id: 7, name: \"Test 5\" },\n  { id: 8, name: \"Test 6\" },\n  { id: 9, name: \"Test 7\" },\n  { id: 10, name: \"Test 8\" },\n  { id: 11, name: \"Test 9\" },\n  { id: 12, name: \"Test 10\" },\n  { id: 13, name: \"Test 11\" },\n];\n\nexport const onThunkGetUserRoles = (): ThunkActionTypes => async (dispatch) => {\n  const userRoleService = new UserRoleService();\n\n  try {\n    // const res = await userRoleService.getUserRoles();\n\n    const res: GetUserRolesApiResult = {\n      success: true,\n      data: userRolesFakeData,\n    };\n\n    if (res.success) {\n      dispatch(onGetUserRolesSuccess(res.data || []));\n    } else {\n      // toast.warning(res.message);\n    }\n  } catch (e) {\n    catchHandle(e, dispatch);\n  }\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/view/users/users.component.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'useCallback' is defined but never used.","line":4,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":28},{"ruleId":"no-unused-vars","severity":2,"message":"'formData' is assigned a value but never used.","line":13,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":18},{"ruleId":"no-unused-vars","severity":2,"message":"'setFormData' is assigned a value but never used.","line":13,"column":20,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":31},{"ruleId":"no-unused-vars","severity":2,"message":"'toggleExpansion' is assigned a value but never used.","line":31,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":31,"endColumn":24}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/* eslint-disable @next/next/no-img-element */\nimport { SignInVM } from \"@/core/view-models/auth/sign-in-vm\";\nimport { UserRoleVM } from \"@/core/view-models/user-role/user-role-vm\";\nimport React, { useCallback, useState } from \"react\";\n\ninterface ComponentProps {\n  userRoles: UserRoleVM[];\n}\n\ntype Props = ComponentProps;\n\nconst UserComponent: React.FunctionComponent<Props> = (props) => {\n  const [formData, setFormData] = useState<SignInVM>(new SignInVM());\n\n  const renderUserRole = (): React.ReactElement[] => {\n    return props.userRoles.map((item) => {\n      return (\n        <tr\n          key={item.id}\n          className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\"\n        >\n          <td className=\"px-6 py-2\">{item.id}</td>\n          <td className=\"px-6 py-2\">{item.name}</td>\n        </tr>\n      );\n    });\n  };\n\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  const toggleExpansion = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <>\n      <div className=\"relative overflow-x-auto w-full flex items-center justify-center py-4\">\n        <table\n          style={{ width: \"400px\" }}\n          className=\"text-sm text-left text-gray-500 dark:text-gray-400\"\n        >\n          <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n            <tr>\n              <th scope=\"col\" className=\"px-6 py-3\">\n                {\"ID\"}\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3\">\n                {\"Name\"}\n              </th>\n            </tr>\n          </thead>\n          <tbody>{renderUserRole()}</tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default UserComponent;\n","usedDeprecatedRules":[]},{"filePath":"/Users/thongluu/workspace/OM/GitHub/SL_FE/src/view/users/users.container.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'UserVM' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'SessionVM' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":19},{"ruleId":"no-unused-vars","severity":2,"message":"'AppProps' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18},{"ruleId":"no-unused-vars","severity":2,"message":"'SignInComponent' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":23},{"ruleId":"no-unused-vars","severity":2,"message":"'SignInVM' is defined but never used.","line":9,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":18},{"ruleId":"no-unused-vars","severity":2,"message":"'onThunkSignIn' is defined but never used.","line":10,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":23},{"ruleId":"no-unused-vars","severity":2,"message":"'onSetEnabledSpinner' is defined but never used.","line":12,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":29},{"ruleId":"no-unused-vars","severity":2,"message":"'UserRoleService' is defined but never used.","line":14,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":25},{"ruleId":"no-unused-vars","severity":2,"message":"'props' is defined but never used.","line":22,"column":56,"nodeType":"Identifier","messageId":"unusedVar","endLine":22,"endColumn":61}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'onGetUserRole'. Either include it or remove the dependency array.","line":28,"column":6,"nodeType":"ArrayExpression","endLine":28,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [onGetUserRole]","fix":{"range":[1083,1085],"text":"[onGetUserRole]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Dispatch, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UserVM } from \"@/core/view-models/user/user-vm\";\nimport { SessionVM } from \"@/core/view-models/session/session-vm\";\nimport { AppProps } from \"next/app\";\nimport SignInComponent from \"./users.component\";\nimport { AppState, store } from \"@/core/store\";\nimport { SignInVM } from \"@/core/view-models/auth/sign-in-vm\";\nimport { onThunkSignIn } from \"@/view/auth/thunk\";\nimport UserComponent from \"./users.component\";\nimport { onSetEnabledSpinner } from \"@/core/store/reducer/app/actions\";\nimport { onThunkGetUserRoles } from \"./store/thunk\";\nimport { UserRoleService } from \"@/core/services/user-role.service\";\n\ninterface ComponentProps {\n  user?: any;\n}\n\ntype Props = ComponentProps;\n\nconst UserContainer: React.FunctionComponent<Props> = (props) => {\n  const dispatch: Dispatch<any> = useDispatch();\n  const { userRoles } = useSelector((state: AppState) => state.userRole);\n\n  useEffect(() => {\n    onGetUserRole();\n  }, []);\n\n  const onGetUserRole = () => {\n    dispatch(onThunkGetUserRoles());\n  };\n\n  return <UserComponent userRoles={userRoles} />;\n};\n\nexport async function getServerSideProps() {\n  const { session } = store.getState().session;\n  // const userRoleService = new UserRoleService();\n  // const res = await userRoleService.getUserRoles();\n\n  return {\n    props: { user: JSON.stringify(session.user) }, // will be passed to the page component as props\n  };\n}\n\nexport default UserContainer;\n","usedDeprecatedRules":[]}]